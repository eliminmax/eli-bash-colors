#!/bin/bash

eclib_clf () (
    if [ -n "$1" ]; then
        if [ "$1" = "-p" ]; then
            echo '\033[0m'
        else
            return 1
        fi
    elselocal a
        echo -e '\033[0m'
    fi
)

eclib_esc () (
    print_code=
    ansi_codes=()
    while [ -n "$1" ]; do
        unset n
        case "$1" in
            -h) echo "TODO: Help message" ;;
            -[fFbB]|--foreground|--intense-foreground|--background|--intense-background)
                case "$1" in
                    -f|--foreground) n=30 ;;
                    -F|--intense-foreground) n=90 ;;
                    -b|--background) n=40 ;;
                    -B|--intense-background) n=100 ;;
                esac
                case "$2" in
                    black|0|bk|dg|dark-gr[ae]y) ((n+=0)) ;;
                    red|1|r) ((n+=1)) ;;
                    green|2|g) ((n+=2)) ;;
                    yellow|3|y) ((n+=3)) ;;
                    blue|4|bl) ((n+=4)) ;;
                    purple|magenta|5|p|m) ((n+=5)) ;;
                    cyan|6|c) ((n+=6)) ;;
                    white|7|w|lg|light-gr[ae]y) ((n+=7)) ;;
                    *)
                        1>&2 echo -e"\033[01;91mInvalid option for flag $1: $2\033[0m"
                        return 2
                        ;;
                esac
                shift
                ;;
            --reset|-r|-0) n=0 ;;
            -e|--bold|-1) n=1 ;;
            -d|--dim|-2) n=2 ;;
            -i|--italic|-3) n=3 ;;
            -u|--underline|-4) n=4 ;;
            -t|--blink|-5) n=5 ;;
            -R|--reverse|-7) n=7 ;;
            -I|--hidden|-8) n=8 ;;
            -S|--strike|-9) n=9 ;;
            -p|--print-code) print_code=1 ;;
            --) shift ; break ;;
            *)
                1>&2 echo -e "\033[01;91mUnrecognized flag \"$1\"\033[0m"
                return 1 ;;
        esac
        if ! [ -z "$n" ]; then
            ansi_codes[${#ansi_codes[@]}]=$n
        fi
        shift
    done
    inner_seq=$(printf "%s" "${ansi_codes}" | tr " " ";")
    ansi_seq="\033[${inner_seq}m"
    if [ ${print_code} ]; then
        # if print code is non-empty, echo the literal string (useful for constructing PS1 prompt string)
        echo "${ansi_seq}"
    else
        # otherwise, actually print the code
        echo -e "${ansi_seq}"
    fi
)

